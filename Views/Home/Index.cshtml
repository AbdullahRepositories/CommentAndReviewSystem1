
@model IEnumerable<Post>
@inject PostingDBContext _db

@{
    var postList = _db.Posts.ToList();
    ViewData["Title"] = "Posts";
}

@{  if(@TempData["message"] is not null)
    {
        <div class="alert alert-success" role="alert">
            @TempData["message"]
        </div>
    }
 
}
<div class="container mt-4">
    <h2 class="mb-4">@ViewData["Title"]</h2>

    @foreach (var post in postList)
    {
        <div class="card mb-3">
            <div class="card-body">
                <h4 class="card-title">@post.Title</h4>
                <!-- Category Tag -->
                <span class="badge bg-primary">@Enum.GetName(typeof(Category), @post.Category)</span>
                <!-- Post Content -->
                <h5 class="card-title">@post.Content</h5>



                <div class="mt-3">
                    <!-- Details Button -->
                    <a asp-action="Details" asp-controller="Post" asp-route-postId="@post.PostId" class="btn btn-info me-2">
                        Details
                    </a>

                    <!-- Edit Button -->
                    <a asp-action="Edit" asp-controller="Post" asp-route-id="@post.PostId" class="btn btn-warning me-2">
                        Edit
                    </a>

                    <!-- Add Review Button -->
                    <button type="button" asp-action="AddReview" asp-controller="Review" asp-route-PostId="@post.PostId" class="btn btn-secondary" data-bs-toggle="modal">
                        Add Review
                    </button>
                </div>
            </div>
        </div>
    }
</div>

